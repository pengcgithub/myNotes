<beans	 xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- redis 配置 -->
	<context:property-placeholder location="classpath:db/redis.properties" />  
  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="300" />  
        <property name="maxTotal" value="600" /> 
        <property name="maxWaitMillis" value="1000" />  
        <property name="testOnBorrow" value="true" />  
<!--         <property name="maxIdle" value="${redis.maxIdle}" />   -->
<!--         <property name="maxTotal" value="${redis.maxTotal}" />   -->
<!--         <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />   -->
<!--         <property name="testOnBorrow" value="${redis.testOnBorrow}" />   -->
    </bean>  
      
      <!-- 配置服务器 -->
<!--     <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> -->
<!--     	<property name="hostName" value="192.168.40.12"/> -->
<!--     	<property name="port" value="6379" /> -->
<!--     	<property name="password" value="" />   -->
<!--         <property name="timeout" value="10000" />   -->
<!--         <property name="database" value="0" /> -->
<!--         <constructor-arg index="0" ref="poolConfig" />   -->
<!--     </bean>   -->
      
      <!-- 配置StringRedisTemplate 和 redisTemplate -->
<!--     <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">   -->
<!--         <property name="connectionFactory"   ref="connectionFactory" />   -->
<!--     </bean> -->
    
<!--     <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">   -->
<!--         <property name="connectionFactory"   ref="connectionFactory" />   -->
<!--     </bean>  -->
    
    <!-- jedis 连接池  -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg ref="poolConfig" />
        <constructor-arg value="192.168.40.12" />
        <constructor-arg value="6379"/>
<!-- 		<constructor-arg value="${redis.host}" /> -->
<!--         <constructor-arg value="${redis.port}" />  -->
    </bean>
    
    <!-- jedis 操作 temple  -->
    <bean id="jedisTemple" class="com.fable.project.common.redis.cache.JedisTemple">
        <constructor-arg ref="jedisPool" />
    </bean>
    
    <!-- jedis 客户端，真正提供给系统使用的客户端，当然如果这个客户端的方法不满足，可以使用jedisTemple -->
    <bean id="jedisClient" class="com.fable.project.common.redis.cache.RedisCacheClient">
        <constructor-arg ref="jedisTemple" />
    </bean>
	<!-- end redis 配置 -->
   
</beans>